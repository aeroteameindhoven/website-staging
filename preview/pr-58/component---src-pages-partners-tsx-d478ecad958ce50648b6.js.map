{"version":3,"file":"component---src-pages-partners-tsx-d478ecad958ce50648b6.js","mappings":"wOAyBO,SAASA,EAAcC,GAC5B,OACEC,EAAAA,cAAA,KAAGC,KAAO,uCAAuCC,UAAWH,EAAMG,WAC/DH,EAAMI,SAGb,C,sBC7BA,MAAMC,EAAK,aAqDEC,EAAmB,CAAC,WAAY,OAAQ,UAa9C,SAASC,IACd,MAAMC,GAAQC,EAAAA,EAAAA,gBAA4BJ,GAE1C,OAAO,IAAIK,IACTF,EAAMG,SAASC,MAAMC,KAAKC,IACxB,GAhB2BC,EAgBLD,EAAEE,iBAfrBV,EAAiBW,SAASF,GAgB3B,MAAM,IAAIG,MAAO,2CAA0CJ,EAAEE,mBAjB9D,IAA0BD,EAoB3B,MAAO,CACLD,EAAEE,gBACFF,EAAEK,MAAMN,KAAiBO,IAAmB,IAADC,EAAA,IAAjB,SAAEC,GAAUF,EACpC,MAAMG,EAAuF,QAAnFF,EAAGb,EAAMgB,OAAOL,MAAMM,MAAMC,GAAQA,EAAIC,eAAiBL,EAASM,YAAYL,cAAK,IAAAF,OAAA,EAAhFA,EAAkFQ,UAE/F,QAAaC,IAATP,EACF,MAAM,IAAIL,MAAO,yBAAwBI,EAASM,YAAYL,aAAaD,EAASM,YAAYG,QAGlG,MAAO,CACLA,KAAMT,EAASM,YAAYG,KAC3BR,OACAS,IAAKV,EAASM,YAAYI,IAC1BC,KAAMX,EAASW,KAChB,IAEJ,IAGP,CCvFO,SAASC,IACd,OAAOjC,EAAAA,cAACkC,EAAAA,EAAW,CAACC,MAAM,YAC5B,CAEA,SAASC,IACP,MAAMC,EAAW/B,IAEjB,OACEN,EAAAA,cAAA,OAAKE,UAAU,gBACbF,EAAAA,cAACsC,EAAAA,GAAS,KACRtC,EAAAA,cAAA,OAAKE,UAAU,kBACbF,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,yFACHA,EAAAA,cAAA,OAAKE,UAAU,kBACbF,EAAAA,cAACF,EAAa,CAACI,UAAU,kBAAiB,iBAI7CG,EAAiBO,KAAK2B,IAAiC,IAAAC,EACtD,OACExC,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,UAAKuC,EAAaE,qBAClBzC,EAAAA,cAAA,WAC6B,QAD7BwC,EACGH,EAASK,IAAIH,UAAa,IAAAC,OAAA,EAA1BA,EAA4B5B,KAAK+B,GAChC3C,EAAAA,cAAA,OAAK4C,IAAKD,EAAEb,KAAM5B,UAAU,gBAC1BF,EAAAA,cAAA,KAAGC,KAAM0C,EAAEZ,IAAK7B,UAAU,eAAe2C,OAAO,SAASC,IAAI,cAC3D9C,EAAAA,cAAA,OAAK+C,IAAKJ,EAAErB,QAEdtB,EAAAA,cAAA,OAAKE,UAAU,OAAO8C,wBAAyB,CAAEC,OAAQN,EAAEX,YAIhE,KAMf,CAEe,SAASkB,IACtB,OAAOlD,EAAAA,cAACmD,EAAAA,EAAM,CAACC,WAAYpD,EAAAA,cAACoC,EAAU,OACxC,C","sources":["webpack://aero-team-eindhoven/./src/components/Email.tsx","webpack://aero-team-eindhoven/./src/hooks/usePartners.ts","webpack://aero-team-eindhoven/./src/pages/partners.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface Props {\n  className?: string;\n}\n\nexport function InfoEmail(props: React.PropsWithChildren<Props>) {\n  return (\n    <a href=\"mailto:info@aeroteameindhoven.nl\" className={props.className}>\n      {props.children}\n    </a>\n  );\n}\n\nexport function JoinEmail(props: React.PropsWithChildren<Props>) {\n  return (\n    <a\n      href={`mailto:join@aeroteameindhoven.nl?subject=Interest in joining Aero Team Eindhoven!&body=Tell us about yourself!`}\n      className={props.className}\n    >\n      {props.children}\n    </a>\n  );\n}\n\nexport function PartnersEmail(props: React.PropsWithChildren<Props>) {\n  return (\n    <a href={`mailto:partners@aeroteameindhoven.nl`} className={props.className}>\n      {props.children}\n    </a>\n  );\n}\n","import { graphql, useStaticQuery } from \"gatsby\";\n\nconst QUERY = graphql`\n  {\n    sponsors: allFile(\n      filter: { sourceInstanceName: { eq: \"sponsors\" } }\n      sort: { childMarkdownRemark: { frontmatter: { name: ASC } } }\n    ) {\n      group(field: { relativeDirectory: SELECT }) {\n        partner_package: fieldValue\n        nodes {\n          markdown: childMarkdownRemark {\n            html\n            frontmatter {\n              name\n              logo\n              url\n            }\n          }\n        }\n      }\n    }\n    images: allFile(filter: { sourceInstanceName: { eq: \"sponsors-images\" } }) {\n      nodes {\n        relativePath\n        publicURL\n      }\n    }\n  }\n`;\n\ninterface QueryResult {\n  sponsors: {\n    group: {\n      partner_package: string;\n      nodes: {\n        markdown: {\n          html: string;\n          frontmatter: {\n            name: string;\n            logo: string;\n            url: string;\n          };\n        };\n      }[];\n    }[];\n  };\n  images: {\n    nodes: {\n      relativePath: string;\n      publicURL: string;\n    }[];\n  };\n}\n\nexport const partner_packages = [\"platinum\", \"gold\", \"silver\"] as const;\nexport type PartnerPackage = (typeof partner_packages)[number];\nexport function isPartnerPackage(package_type: string): package_type is PartnerPackage {\n  return partner_packages.includes(package_type as PartnerPackage);\n}\n\ninterface PartnerInfo {\n  name: string;\n  logo: string;\n  url: string;\n  html: string;\n}\n\nexport function usePartners(): Map<PartnerPackage, PartnerInfo[]> {\n  const query = useStaticQuery<QueryResult>(QUERY);\n\n  return new Map(\n    query.sponsors.group.map((g) => {\n      if (!isPartnerPackage(g.partner_package)) {\n        throw new Error(`Invalid package in sponsor definitions: ${g.partner_package}`);\n      }\n\n      return [\n        g.partner_package,\n        g.nodes.map<PartnerInfo>(({ markdown }) => {\n          const logo = query.images.nodes.find((img) => img.relativePath === markdown.frontmatter.logo)?.publicURL;\n\n          if (logo === undefined) {\n            throw new Error(`Unable to find image '${markdown.frontmatter.logo}' for ${markdown.frontmatter.name}`);\n          }\n\n          return {\n            name: markdown.frontmatter.name,\n            logo,\n            url: markdown.frontmatter.url,\n            html: markdown.html\n          };\n        })\n      ];\n    })\n  );\n}\n","import React from \"react\";\nimport { Container } from \"react-grid-system\";\nimport Layout from \"../components/Layout\";\nimport \"../components/styles/partners.scss\";\n\nimport { PartnersEmail } from \"../components/Email\";\nimport { HeadContent } from \"../components/HeadContent\";\nimport { PartnerPackage, partner_packages, usePartners } from \"../hooks/usePartners\";\n\nexport function Head() {\n  return <HeadContent title=\"Partners\" />;\n}\n\nfunction PostHeader() {\n  const partners = usePartners();\n\n  return (\n    <div className=\"partner-page\">\n      <Container>\n        <div className=\"partner-header\">\n          <h1>PARTNERS</h1>\n          <p>Helping us lift off! Do you want to help us redefine flying? Feel free to contact us!</p>\n          <div className=\"button-wrapper\">\n            <PartnersEmail className=\"contact-button\">Contact Us!</PartnersEmail>\n          </div>\n        </div>\n\n        {partner_packages.map((package_name: PartnerPackage) => {\n          return (\n            <>\n              <h1>{package_name.toLocaleUpperCase()}</h1>\n              <div>\n                {partners.get(package_name)?.map((v) => (\n                  <div key={v.name} className=\"partner-info\">\n                    <a href={v.url} className=\"partner-logo\" target=\"_blank\" rel=\"noreferrer\">\n                      <img src={v.logo} />\n                    </a>\n                    <div className=\"text\" dangerouslySetInnerHTML={{ __html: v.html }} />\n                  </div>\n                ))}\n              </div>\n            </>\n          );\n        })}\n      </Container>\n    </div>\n  );\n}\n\nexport default function Partners() {\n  return <Layout postHeader={<PostHeader />} />;\n}\n"],"names":["PartnersEmail","props","React","href","className","children","QUERY","partner_packages","usePartners","query","useStaticQuery","Map","sponsors","group","map","g","package_type","partner_package","includes","Error","nodes","_ref","_query$images$nodes$f","markdown","logo","images","find","img","relativePath","frontmatter","publicURL","undefined","name","url","html","Head","HeadContent","title","PostHeader","partners","Container","package_name","_partners$get","toLocaleUpperCase","get","v","key","target","rel","src","dangerouslySetInnerHTML","__html","Partners","Layout","postHeader"],"sourceRoot":""}