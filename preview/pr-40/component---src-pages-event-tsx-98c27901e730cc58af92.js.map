{"version":3,"file":"component---src-pages-event-tsx-98c27901e730cc58af92.js","mappings":"sOACW,EAAS,8BACTA,EAAY,iCACZC,EAAU,+BCEd,SAASC,IACd,OAAOC,EAAAA,cAACC,EAAAA,EAAW,CAACC,MAAM,qBAAqBC,YAAY,oCAC7D,CAEe,SAASC,IACtB,MAAMC,EAAO,IAAIC,KAAK,6BAEhBC,EAAS,IAAIC,KAAKC,eAAe,KAAM,CAAEC,UAAW,SAAUC,UAAW,YAEzE,EAACC,EAAG,EAAEC,IAAUC,EAAAA,EAAAA,WAAS,IAAM,IAAIR,QAEzCS,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAWC,aAAY,KAC3BJ,EAAO,IAAIP,KAAO,GACjB,KAEH,MAAO,IAAMY,cAAcF,EAAS,IAGtC,MAAMG,EAAgBC,KAAKC,OAAOhB,EAAKiB,UAAYV,EAAIU,WAAa,KAC9DC,EAAQH,KAAKI,MAAML,EAAgB,IACnCM,EAAUN,EAAgB,GAEhC,IAAIO,EAAe,KACfH,EAAQ,EACVG,EAAkBH,EAAK,SACL,GAATA,IACTG,EAAkBH,EAAK,SAGzB,IAAII,EAAiB,KAOrB,OANIF,EAAU,EACZE,EAAiB,OAAOJ,EAAK,WACT,GAAXE,IACTE,EAAiB,OAAOJ,EAAK,WAI7BvB,EAAAA,cAAC4B,EAAAA,EAAM,KACL5B,EAAAA,cAAA,OAAK6B,UAAW/B,GACdE,EAAAA,cAAA,OAAK6B,UAAWhC,GAAW,yBACF6B,EAAa,IAAEC,EAAe,OAAKpB,EAAOA,OAAOF,IAE1EL,EAAAA,cAAA,KACE8B,KAAK,gEACLC,OAAO,SACPC,IAAI,sBACJH,UAAWI,GACZ,qBAMT,C","sources":["webpack://aero-team-eindhoven/./src/pages/event.module.scss","webpack://aero-team-eindhoven/./src/pages/event.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var button = \"event-module--button--dcfbe\";\nexport var countdown = \"event-module--countdown--8c6b4\";\nexport var wrapper = \"event-module--wrapper--24fb8\";","import React, { useEffect, useState } from \"react\";\nimport { HeadContent } from \"../components/HeadContent\";\nimport Layout from \"../components/Layout\";\nimport { wrapper, countdown, button } from \"./event.module.scss\";\n\nexport function Head() {\n  return <HeadContent title=\"Aegle Takes Flight\" description=\"Aero reveals: Aegle Takes Flight\" />;\n}\n\nexport default function Event() {\n  const date = new Date(\"2023-06-19T15:00:00+02:00\");\n\n  const format = new Intl.DateTimeFormat(\"en\", { dateStyle: \"medium\", timeStyle: \"medium\" });\n\n  const [now, setNow] = useState(() => new Date());\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setNow(new Date());\n    }, 60 * 1000);\n\n    return () => clearInterval(interval);\n  });\n\n  const total_minutes = Math.round((date.getTime() - now.getTime()) / (60 * 1000));\n  const hours = Math.floor(total_minutes / 60);\n  const minutes = total_minutes % 60;\n\n  let hours_string = null;\n  if (hours > 1) {\n    hours_string = `${hours} hours`;\n  } else if (hours == 1) {\n    hours_string = `${hours} hour`;\n  }\n\n  let minutes_string = null;\n  if (minutes > 1) {\n    minutes_string = `and ${hours} minutes`;\n  } else if (minutes == 1) {\n    minutes_string = `and ${hours} minute`;\n  }\n\n  return (\n    <Layout>\n      <div className={wrapper}>\n        <div className={countdown}>\n          Event will be live in {hours_string} {minutes_string} at {format.format(date)}\n        </div>\n        <a\n          href=\"https://www.youtube.com/channel/UC48Rt9YAXZIi9RsOdSUUcFQ/live\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={button}\n        >\n          Watch on Youtube\n        </a>\n      </div>\n    </Layout>\n  );\n}\n"],"names":["countdown","wrapper","Head","React","HeadContent","title","description","Event","date","Date","format","Intl","DateTimeFormat","dateStyle","timeStyle","now","setNow","useState","useEffect","interval","setInterval","clearInterval","total_minutes","Math","round","getTime","hours","floor","minutes","hours_string","minutes_string","Layout","className","href","target","rel","button"],"sourceRoot":""}